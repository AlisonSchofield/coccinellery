coccinellery-short = simplify error handling
coccinellery-copyright = Copyright: 2012 - LIP6/INRIA
coccinellery-license = Licensed under GPLv2 or any later version.
coccinellery-author0 = Julia Lawall <Julia.Lawall@lip6.fr>
----------------------------

From: Julia Lawall <Julia.Lawall@lip6.fr>

nf_conntrack_alloc cannot return NULL, so there is no need to check for
NULL before using the value.  I have also removed the initialization of ct
to NULL in nf_conntrack_alloc, since the value is never used, and since
perhaps it might lead one to think that return ct at the end might return
NULL.

The semantic patch that finds this problem is as follows:
(http://www.emn.fr/x-info/coccinelle/)

// <smpl>
@match exists@
expression x, E;
position p1,p2;
statement S1, S2;
@@

x@p1 = nf_conntrack_alloc(...)
... when != x = E
(
  if (x@p2 == NULL || ...) S1 else S2
|
  if (x@p2 == NULL && ...) S1 else S2
)

@other_match exists@
expression match.x, E1, E2;
position p1!=match.p1,match.p2;
@@

x@p1 = E1
... when != x = E2
x@p2

@ script:python depends on !other_match@
p1 << match.p1;
p2 << match.p2;
@@

print \"%s: call to nf_conntrack_alloc %s bad test %s\" % (p1[0].file,p1[0].line,p2[0].line)
// </smpl>

Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>

