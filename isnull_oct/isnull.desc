coccinellery-short = eliminate a null pointer dereference
coccinellery-copyright = Copyright: 2012 - LIP6/INRIA
coccinellery-license = Licensed under GPLv2 or any later version.
coccinellery-author0 = Julia Lawall <Julia.Lawall@lip6.fr>
It is not possible to take the lock in device if device is NULL.
The mutex_lock is thus moved after the NULL test.  New error handling
labels are added at the end to differentiate between the cases where
different sets of locks should be unlocks, and between whether or not
reader should be freed (only on error).

The semantic match that finds this problem is as follows:
(http://coccinelle.lip6.fr/)

// <smpl>
@r@
expression E, E1;
identifier f;
statement S1,S2,S3;
@@

if (E == NULL)
{
  ... when != if (E == NULL || ...) S1 else S2
      when != E = E1
*E->f
  ... when any
  return ...;
}
else S3
// </smpl>

Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>

