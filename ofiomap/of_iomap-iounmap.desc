coccinellery-short = Add missing iounmap
coccinellery-copyright = Copyright: 2012 - LIP6/INRIA
coccinellery-license = Licensed under GPLv2 or any later version.
coccinellery-author0 = Julia Lawall <Julia.Lawall@lip6.fr>
drivers/pcmcia/m8xx_pcmcia.c

Send to:
linux-pcmcia@lists.infradead.org, vbordug@ru.mvista.com, linux-kernel@vger.kernel.org, kernel-janitors@vger.kernel.org

Subject: [PATCH] drivers/pcmcia: Add missing iounmap

------------------------------------------------------

From: Julia Lawall <Julia.Lawall@lip6.fr>

of_iomap calls ioremap, and so should be matched with an iounmap.  At the
two error returns, the result of calling of_iomap is only stored in a local
variable, so these error paths need to call iounmap.  Furthermore, this
function ultimately stores the result of of_iomap in an array that is local
to the file.  These values should be iounmapped at some point.  I have
added a corresponding call to iounmap at the end of the function m8xx_remove.



The problem was found using the following semantic match.
(http://www.emn.fr/x-info/coccinelle/)

// <smpl>
@@
type T,T1,T2;
identifier E;
statement S;
expression x1,x2,x3;
int ret;
@@

  T E;
  ...
* E = of_iomap(...);
  if (E == NULL) S
  ... when != iounmap(...,(T1)E,...)
      when != if (E != NULL) { ... iounmap(...,(T1)E,...); ...}
      when != x1 = (T1)E
      when != E = x3;
      when any
  if (...) {
    ... when != iounmap(...,(T2)E,...)
        when != if (E != NULL) { ... iounmap(...,(T2)E,...); ...}
        when != x2 = (T2)E
(
*   return;
|
*   return ret;
)
  }
// </smpl>

Signed-off-by: Julia Lawall <Julia.Lawall@lip6.fr>
